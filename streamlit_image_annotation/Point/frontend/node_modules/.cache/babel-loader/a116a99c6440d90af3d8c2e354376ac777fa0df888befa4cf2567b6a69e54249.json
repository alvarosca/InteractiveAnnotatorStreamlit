{"ast":null,"code":"import _objectSpread from\"/home/DigPatho/InteractiveAnnotatorStreamlitV5/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/DigPatho/InteractiveAnnotatorStreamlitV5/streamlit_image_annotation/Point/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Layer,Stage,Image}from'react-konva';import Point from'./Point';import Konva from'konva';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PointCanvas=function PointCanvas(props){var pointsInfo=props.pointsInfo,mode=props.mode,selectedId=props.selectedId,setSelectedId=props.setSelectedId,setPointsInfo=props.setPointsInfo,setLabel=props.setLabel,color_map=props.color_map,label=props.label,image_size=props.image_size,image=props.image,strokeWidth=props.strokeWidth;// State to track the current window size\nvar _useState=useState({width:window.innerWidth,height:window.innerHeight}),_useState2=_slicedToArray(_useState,2),windowSize=_useState2[0],setWindowSize=_useState2[1];// Calculate the image scale so it fits the window\nvar scaleX=windowSize.width/image_size[0];var scaleY=windowSize.height/image_size[1];var scale=Math.min(scaleX,scaleY);// Maintain aspect ratio\n// Update window size when the window resizes\nuseEffect(function(){var handleResize=function handleResize(){setWindowSize({width:window.innerWidth,height:window.innerHeight});};window.addEventListener('resize',handleResize);return function(){return window.removeEventListener('resize',handleResize);};},[]);// Ensure points stay within the image boundary\nuseEffect(function(){var points=pointsInfo.slice();for(var i=0;i<points.length;i++){if(points[i].x<0||points[i].y<0){points[i].x=Math.max(0,points[i].x);points[i].y=Math.max(0,points[i].y);setPointsInfo(points);}if(points[i].x>image_size[0]||points[i].y>image_size[1]){points[i].x=Math.min(points[i].x,image_size[0]);points[i].y=Math.min(points[i].y,image_size[1]);setPointsInfo(points);}}console.log(pointsInfo);},[pointsInfo,image_size]);// Handle deselection logic\nvar checkDeselect=function checkDeselect(e){if(!(e.target instanceof Konva.Circle)){if(selectedId===null){if(mode==='Transform'){var pointer=e.target.getStage().getPointerPosition();var points=pointsInfo.slice();var new_id=Date.now().toString();points.push({x:pointer.x/scale,y:pointer.y/scale,label:label,stroke:color_map[label],id:new_id});setPointsInfo(points);setSelectedId(new_id);}}else{setSelectedId(null);}}};return/*#__PURE__*/_jsxs(Stage,{width:windowSize.width,height:windowSize.height,onMouseDown:checkDeselect,children:[/*#__PURE__*/_jsx(Layer,{children:/*#__PURE__*/_jsx(Image,{image:image,width:image_size[0]*scale,height:image_size[1]*scale})}),/*#__PURE__*/_jsx(Layer,{children:pointsInfo.map(function(point,i){return/*#__PURE__*/_jsx(Point,{rectProps:_objectSpread(_objectSpread({},point),{},{x:point.x*scale,// Scale point position\ny:point.y*scale// Scale point position\n}),scale:scale,strokeWidth:strokeWidth,isSelected:mode==='Transform'&&point.id===selectedId,onClick:function onClick(){if(mode==='Transform'){setSelectedId(point.id);var points=pointsInfo.slice();var lastIndex=points.length-1;var lastItem=points[lastIndex];points[lastIndex]=points[i];points[i]=lastItem;setPointsInfo(points);setLabel(point.label);}else if(mode==='Del'){var _points=pointsInfo.slice();setPointsInfo(_points.filter(function(element){return element.id!==point.id;}));}},onChange:function onChange(newAttrs){var points=pointsInfo.slice();points[i]=newAttrs;setPointsInfo(points);}},i);})})]});};export default PointCanvas;","map":{"version":3,"names":["React","useEffect","useState","Layer","Stage","Image","Point","Konva","jsx","_jsx","jsxs","_jsxs","PointCanvas","props","pointsInfo","mode","selectedId","setSelectedId","setPointsInfo","setLabel","color_map","label","image_size","image","strokeWidth","_useState","width","window","innerWidth","height","innerHeight","_useState2","_slicedToArray","windowSize","setWindowSize","scaleX","scaleY","scale","Math","min","handleResize","addEventListener","removeEventListener","points","slice","i","length","x","y","max","console","log","checkDeselect","e","target","Circle","pointer","getStage","getPointerPosition","new_id","Date","now","toString","push","stroke","id","onMouseDown","children","map","point","rectProps","_objectSpread","isSelected","onClick","lastIndex","lastItem","filter","element","onChange","newAttrs"],"sources":["/home/DigPatho/InteractiveAnnotatorStreamlitV5/streamlit_image_annotation/Point/frontend/src/PointCanvas.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Layer, Stage, Image } from 'react-konva';\nimport Point from './Point';\nimport Konva from 'konva';\n\nexport interface PointCanvasProps {\n  pointsInfo: any[],\n  mode: string,\n  selectedId: string | null,\n  setSelectedId: any,\n  setPointsInfo: any,\n  setLabel: any,\n  color_map: any,\n  scale: number,\n  label: string,\n  image_size: number[],\n  image: any,\n  strokeWidth: number\n}\n\nconst PointCanvas = (props: PointCanvasProps) => {\n  const {\n    pointsInfo,\n    mode,\n    selectedId,\n    setSelectedId,\n    setPointsInfo,\n    setLabel,\n    color_map,\n    label,\n    image_size,\n    image,\n    strokeWidth\n  }: PointCanvasProps = props;\n  \n  // State to track the current window size\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  // Calculate the image scale so it fits the window\n  const scaleX = windowSize.width / image_size[0];\n  const scaleY = windowSize.height / image_size[1];\n  const scale = Math.min(scaleX, scaleY); // Maintain aspect ratio\n\n  // Update window size when the window resizes\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Ensure points stay within the image boundary\n  useEffect(() => {\n    const points = pointsInfo.slice();\n    for (let i = 0; i < points.length; i++) {\n      if (points[i].x < 0 || points[i].y < 0) {\n        points[i].x = Math.max(0, points[i].x);\n        points[i].y = Math.max(0, points[i].y);\n        setPointsInfo(points);\n      }\n      if (points[i].x > image_size[0] || points[i].y > image_size[1]) {\n        points[i].x = Math.min(points[i].x, image_size[0]);\n        points[i].y = Math.min(points[i].y, image_size[1]);\n        setPointsInfo(points);\n      }\n    }\n    console.log(pointsInfo);\n  }, [pointsInfo, image_size]);\n\n  // Handle deselection logic\n  const checkDeselect = (e: any) => {\n    if (!(e.target instanceof Konva.Circle)) {\n      if (selectedId === null) {\n        if (mode === 'Transform') {\n          const pointer = e.target.getStage().getPointerPosition();\n          const points = pointsInfo.slice();\n          const new_id = Date.now().toString();\n          points.push({\n            x: pointer.x / scale,\n            y: pointer.y / scale,\n            label: label,\n            stroke: color_map[label],\n            id: new_id\n          });\n          setPointsInfo(points);\n          setSelectedId(new_id);\n        }\n      } else {\n        setSelectedId(null);\n      }\n    }\n  };\n\n  return (\n    <Stage\n      width={windowSize.width}\n      height={windowSize.height}\n      onMouseDown={checkDeselect}\n    >\n      <Layer>\n        <Image \n          image={image} \n          width={image_size[0] * scale} \n          height={image_size[1] * scale} \n        />\n      </Layer>\n      <Layer>\n        {pointsInfo.map((point, i) => (\n          <Point\n            key={i}\n            rectProps={{\n              ...point,\n              x: point.x * scale,  // Scale point position\n              y: point.y * scale,  // Scale point position\n            }}\n            scale={scale}\n            strokeWidth={strokeWidth}\n            isSelected={mode === 'Transform' && point.id === selectedId}\n            onClick={() => {\n              if (mode === 'Transform') {\n                setSelectedId(point.id);\n                const points = pointsInfo.slice();\n                const lastIndex = points.length - 1;\n                const lastItem = points[lastIndex];\n                points[lastIndex] = points[i];\n                points[i] = lastItem;\n                setPointsInfo(points);\n                setLabel(point.label);\n              } else if (mode === 'Del') {\n                const points = pointsInfo.slice();\n                setPointsInfo(points.filter((element) => element.id !== point.id));\n              }\n            }}\n            onChange={(newAttrs: any) => {\n              const points = pointsInfo.slice();\n              points[i] = newAttrs;\n              setPointsInfo(points);\n            }}\n          />\n        ))}\n      </Layer>\n    </Stage>\n  );\n};\n\nexport default PointCanvas;\n"],"mappings":"2VAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,KAAK,CAAEC,KAAK,CAAEC,KAAK,KAAQ,aAAa,CACjD,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAiB1B,GAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,KAAuB,CAAK,CAC/C,GACE,CAAAC,UAAU,CAWUD,KAAK,CAXzBC,UAAU,CACVC,IAAI,CAUgBF,KAAK,CAVzBE,IAAI,CACJC,UAAU,CASUH,KAAK,CATzBG,UAAU,CACVC,aAAa,CAQOJ,KAAK,CARzBI,aAAa,CACbC,aAAa,CAOOL,KAAK,CAPzBK,aAAa,CACbC,QAAQ,CAMYN,KAAK,CANzBM,QAAQ,CACRC,SAAS,CAKWP,KAAK,CALzBO,SAAS,CACTC,KAAK,CAIeR,KAAK,CAJzBQ,KAAK,CACLC,UAAU,CAGUT,KAAK,CAHzBS,UAAU,CACVC,KAAK,CAEeV,KAAK,CAFzBU,KAAK,CACLC,WAAW,CACSX,KAAK,CADzBW,WAAW,CAGb;AACA,IAAAC,SAAA,CAAoCvB,QAAQ,CAAC,CAC3CwB,KAAK,CAAEC,MAAM,CAACC,UAAU,CACxBC,MAAM,CAAEF,MAAM,CAACG,WACjB,CAAC,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAP,SAAA,IAHKQ,UAAU,CAAAF,UAAA,IAAEG,aAAa,CAAAH,UAAA,IAKhC;AACA,GAAM,CAAAI,MAAM,CAAGF,UAAU,CAACP,KAAK,CAAGJ,UAAU,CAAC,CAAC,CAAC,CAC/C,GAAM,CAAAc,MAAM,CAAGH,UAAU,CAACJ,MAAM,CAAGP,UAAU,CAAC,CAAC,CAAC,CAChD,GAAM,CAAAe,KAAK,CAAGC,IAAI,CAACC,GAAG,CAACJ,MAAM,CAAEC,MAAM,CAAC,CAAE;AAExC;AACAnC,SAAS,CAAC,UAAM,CACd,GAAM,CAAAuC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzBN,aAAa,CAAC,CACZR,KAAK,CAAEC,MAAM,CAACC,UAAU,CACxBC,MAAM,CAAEF,MAAM,CAACG,WACjB,CAAC,CAAC,CACJ,CAAC,CACDH,MAAM,CAACc,gBAAgB,CAAC,QAAQ,CAAED,YAAY,CAAC,CAC/C,MAAO,kBAAM,CAAAb,MAAM,CAACe,mBAAmB,CAAC,QAAQ,CAAEF,YAAY,CAAC,GACjE,CAAC,CAAE,EAAE,CAAC,CAEN;AACAvC,SAAS,CAAC,UAAM,CACd,GAAM,CAAA0C,MAAM,CAAG7B,UAAU,CAAC8B,KAAK,CAAC,CAAC,CACjC,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGF,MAAM,CAACG,MAAM,CAAED,CAAC,EAAE,CAAE,CACtC,GAAIF,MAAM,CAACE,CAAC,CAAC,CAACE,CAAC,CAAG,CAAC,EAAIJ,MAAM,CAACE,CAAC,CAAC,CAACG,CAAC,CAAG,CAAC,CAAE,CACtCL,MAAM,CAACE,CAAC,CAAC,CAACE,CAAC,CAAGT,IAAI,CAACW,GAAG,CAAC,CAAC,CAAEN,MAAM,CAACE,CAAC,CAAC,CAACE,CAAC,CAAC,CACtCJ,MAAM,CAACE,CAAC,CAAC,CAACG,CAAC,CAAGV,IAAI,CAACW,GAAG,CAAC,CAAC,CAAEN,MAAM,CAACE,CAAC,CAAC,CAACG,CAAC,CAAC,CACtC9B,aAAa,CAACyB,MAAM,CAAC,CACvB,CACA,GAAIA,MAAM,CAACE,CAAC,CAAC,CAACE,CAAC,CAAGzB,UAAU,CAAC,CAAC,CAAC,EAAIqB,MAAM,CAACE,CAAC,CAAC,CAACG,CAAC,CAAG1B,UAAU,CAAC,CAAC,CAAC,CAAE,CAC9DqB,MAAM,CAACE,CAAC,CAAC,CAACE,CAAC,CAAGT,IAAI,CAACC,GAAG,CAACI,MAAM,CAACE,CAAC,CAAC,CAACE,CAAC,CAAEzB,UAAU,CAAC,CAAC,CAAC,CAAC,CAClDqB,MAAM,CAACE,CAAC,CAAC,CAACG,CAAC,CAAGV,IAAI,CAACC,GAAG,CAACI,MAAM,CAACE,CAAC,CAAC,CAACG,CAAC,CAAE1B,UAAU,CAAC,CAAC,CAAC,CAAC,CAClDJ,aAAa,CAACyB,MAAM,CAAC,CACvB,CACF,CACAO,OAAO,CAACC,GAAG,CAACrC,UAAU,CAAC,CACzB,CAAC,CAAE,CAACA,UAAU,CAAEQ,UAAU,CAAC,CAAC,CAE5B;AACA,GAAM,CAAA8B,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,CAAM,CAAK,CAChC,GAAI,EAAEA,CAAC,CAACC,MAAM,WAAY,CAAA/C,KAAK,CAACgD,MAAM,CAAC,CAAE,CACvC,GAAIvC,UAAU,GAAK,IAAI,CAAE,CACvB,GAAID,IAAI,GAAK,WAAW,CAAE,CACxB,GAAM,CAAAyC,OAAO,CAAGH,CAAC,CAACC,MAAM,CAACG,QAAQ,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CACxD,GAAM,CAAAf,MAAM,CAAG7B,UAAU,CAAC8B,KAAK,CAAC,CAAC,CACjC,GAAM,CAAAe,MAAM,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACpCnB,MAAM,CAACoB,IAAI,CAAC,CACVhB,CAAC,CAAES,OAAO,CAACT,CAAC,CAAGV,KAAK,CACpBW,CAAC,CAAEQ,OAAO,CAACR,CAAC,CAAGX,KAAK,CACpBhB,KAAK,CAAEA,KAAK,CACZ2C,MAAM,CAAE5C,SAAS,CAACC,KAAK,CAAC,CACxB4C,EAAE,CAAEN,MACN,CAAC,CAAC,CACFzC,aAAa,CAACyB,MAAM,CAAC,CACrB1B,aAAa,CAAC0C,MAAM,CAAC,CACvB,CACF,CAAC,IAAM,CACL1C,aAAa,CAAC,IAAI,CAAC,CACrB,CACF,CACF,CAAC,CAED,mBACEN,KAAA,CAACP,KAAK,EACJsB,KAAK,CAAEO,UAAU,CAACP,KAAM,CACxBG,MAAM,CAAEI,UAAU,CAACJ,MAAO,CAC1BqC,WAAW,CAAEd,aAAc,CAAAe,QAAA,eAE3B1D,IAAA,CAACN,KAAK,EAAAgE,QAAA,cACJ1D,IAAA,CAACJ,KAAK,EACJkB,KAAK,CAAEA,KAAM,CACbG,KAAK,CAAEJ,UAAU,CAAC,CAAC,CAAC,CAAGe,KAAM,CAC7BR,MAAM,CAAEP,UAAU,CAAC,CAAC,CAAC,CAAGe,KAAM,CAC/B,CAAC,CACG,CAAC,cACR5B,IAAA,CAACN,KAAK,EAAAgE,QAAA,CACHrD,UAAU,CAACsD,GAAG,CAAC,SAACC,KAAK,CAAExB,CAAC,qBACvBpC,IAAA,CAACH,KAAK,EAEJgE,SAAS,CAAAC,aAAA,CAAAA,aAAA,IACJF,KAAK,MACRtB,CAAC,CAAEsB,KAAK,CAACtB,CAAC,CAAGV,KAAK,CAAG;AACrBW,CAAC,CAAEqB,KAAK,CAACrB,CAAC,CAAGX,KAAQ;AAAA,EACrB,CACFA,KAAK,CAAEA,KAAM,CACbb,WAAW,CAAEA,WAAY,CACzBgD,UAAU,CAAEzD,IAAI,GAAK,WAAW,EAAIsD,KAAK,CAACJ,EAAE,GAAKjD,UAAW,CAC5DyD,OAAO,CAAE,SAAAA,QAAA,CAAM,CACb,GAAI1D,IAAI,GAAK,WAAW,CAAE,CACxBE,aAAa,CAACoD,KAAK,CAACJ,EAAE,CAAC,CACvB,GAAM,CAAAtB,MAAM,CAAG7B,UAAU,CAAC8B,KAAK,CAAC,CAAC,CACjC,GAAM,CAAA8B,SAAS,CAAG/B,MAAM,CAACG,MAAM,CAAG,CAAC,CACnC,GAAM,CAAA6B,QAAQ,CAAGhC,MAAM,CAAC+B,SAAS,CAAC,CAClC/B,MAAM,CAAC+B,SAAS,CAAC,CAAG/B,MAAM,CAACE,CAAC,CAAC,CAC7BF,MAAM,CAACE,CAAC,CAAC,CAAG8B,QAAQ,CACpBzD,aAAa,CAACyB,MAAM,CAAC,CACrBxB,QAAQ,CAACkD,KAAK,CAAChD,KAAK,CAAC,CACvB,CAAC,IAAM,IAAIN,IAAI,GAAK,KAAK,CAAE,CACzB,GAAM,CAAA4B,OAAM,CAAG7B,UAAU,CAAC8B,KAAK,CAAC,CAAC,CACjC1B,aAAa,CAACyB,OAAM,CAACiC,MAAM,CAAC,SAACC,OAAO,QAAK,CAAAA,OAAO,CAACZ,EAAE,GAAKI,KAAK,CAACJ,EAAE,GAAC,CAAC,CACpE,CACF,CAAE,CACFa,QAAQ,CAAE,SAAAA,SAACC,QAAa,CAAK,CAC3B,GAAM,CAAApC,MAAM,CAAG7B,UAAU,CAAC8B,KAAK,CAAC,CAAC,CACjCD,MAAM,CAACE,CAAC,CAAC,CAAGkC,QAAQ,CACpB7D,aAAa,CAACyB,MAAM,CAAC,CACvB,CAAE,EA5BGE,CA6BN,CAAC,EACH,CAAC,CACG,CAAC,EACH,CAAC,CAEZ,CAAC,CAED,cAAe,CAAAjC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}